<Window x:Class="AgsEventAdder.MainWindow"
        x:Name="MainWindowN"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AgsEventAdder"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="AGS Game Event Adder" 
        Height="450" Width="1000"
        Closing="Window_Closing">
    <Window.Resources>
        <sys:Double x:Key="FullLineHeight">25</sys:Double>
        <sys:Double x:Key="LineHeight">20</sys:Double>
        <sys:Double x:Key="DownSpacer">10</sys:Double>
        <sys:Boolean x:Key="GameOpen">False</sys:Boolean>
        <sys:Boolean x:Key="ChangesPending">False</sys:Boolean>
        <local:CollapsedWhenNullConverter x:Key="CollapsedWhenNull" />
        <local:CollapsedWhenEmptyConverter x:Key="CollapsedWhenEmpty" />
        <local:CollapsedWhenFalseConverter x:Key="CollapsedWhenFalse" />
        <!-- This gory ~140 lines blob of code is needed in order to have TreeViews
             behave as they ought to behave, as far as alignment is concerned.
             NOTE! They claim that this awfulness would "not be too bad" (!!) -->
        <!-- XAML is all about getting wonderfully readable, extremely clear 
             UI code where you can always zoom in on exactly what you need to 
             know and arrive instantly. It's the holy grail of UI and soooo much
             better than programming code. You know. -->
        <Style TargetType="TreeViewItem"
                BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"
                                MinWidth="19" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <ToggleButton IsChecked="{Binding Path=IsExpanded, 
                                                            RelativeSource={RelativeSource TemplatedParent}}"
                                                ClickMode="Press"
                                                Name="Expander">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="UIElement.Focusable" Value="false" />
                                            <Setter Property="FrameworkElement.Width" Value="16" />
                                            <Setter Property="FrameworkElement.Height" Value="16" />
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border Padding="5,5,5,5"
                                                                Background="#00FFFFFF"
                                                                Width="16"
                                                                Height="16">
                                                            <Path Fill="#00FFFFFF"
                                                                Stroke="#FF989898"
                                                                Name="ExpandPath">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                </Path.Data>
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="135"
                                                                                       CenterX="3"
                                                                                       CenterY="3" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="UIElement.IsMouseOver"
                                                                     Value="True">
                                                                <Setter TargetName="ExpandPath"
                                                                        Property="Shape.Stroke"
                                                                        Value="#FF1BBBFA" />
                                                                <Setter TargetName="ExpandPath"
                                                                        Property="Shape.Fill"
                                                                        Value="#00FFFFFF" />
                                                            </Trigger>
                                                            <Trigger Property="ToggleButton.IsChecked"
                                                                     Value="True">
                                                                <Setter TargetName="ExpandPath"
                                                                        Property="UIElement.RenderTransform">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180"
                                                                         CenterX="3"
                                                                         CenterY="3" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="ExpandPath"
                                                                        Property="Shape.Fill"
                                                                        Value="#FF595959" />
                                                                <Setter TargetName="ExpandPath"
                                                                        Property="Shape.Stroke"
                                                                        Value="#FF262626" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border x:Name="Bd"
                                        HorizontalAlignment="Stretch"
                                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        Padding="{TemplateBinding Control.Padding}"
                                        Background="{TemplateBinding Panel.Background}"
                                        SnapsToDevicePixels="True"
                                        Grid.Column="1">
                                    <ContentPresenter x:Name="PART_Header"
                                                        Content="{TemplateBinding HeaderedContentControl.Header}"
                                                        ContentTemplate="{TemplateBinding 
                                                            HeaderedContentControl.HeaderTemplate}"
                                                        ContentStringFormat="{TemplateBinding 
                                                            HeaderedItemsControl.HeaderStringFormat}"
                                                        ContentTemplateSelector="{TemplateBinding 
                                                            HeaderedItemsControl.HeaderTemplateSelector}"
                                                        ContentSource="Header"
                                                        HorizontalAlignment="{TemplateBinding 
                                                            Control.HorizontalContentAlignment}"
                                                        SnapsToDevicePixels="{TemplateBinding 
                                                            UIElement.SnapsToDevicePixels}" />
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost"
                                                Grid.Column="1"
                                                Grid.Row="1" />
                            </Grid>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Panel.Background"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" 
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.Margin>
            <Thickness Left="10" Right="10" Bottom="{StaticResource DownSpacer}"></Thickness>
        </Grid.Margin>
        <Grid.RowDefinitions>
            <!-- Game name, description, buttons-->
            <RowDefinition Height="Auto"/>
            <!-- Errors when opening game -->
            <RowDefinition Height="Auto"/>
            <!-- Work area (Overview + work grid) -->
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="GamePathLabel" 
               Target="{Binding ElementName=GamePathTxt}"
               Content="_Game"
               Grid.Row="0" Grid.Column="0"/>
        <DockPanel Grid.Row="0"  Grid.Column="1">
            <TextBox x:Name="GamePathTxt"
             Text=""
             FontFamily="./Fonts/#DM Mono"
             TextChanged="GamePathTxt_TextChanged"
             LostFocus="GamePathTxt_LostFocus"
             GotKeyboardFocus="GamePathTxt_GotKeyboardFocus"
             VerticalAlignment="Center"
             MinWidth="300"
             MaxWidth="500">
                <TextBox.Resources>
                    <sys:String x:Key="Prompt">(Enter Path to .ags file)</sys:String>
                </TextBox.Resources>
            </TextBox>
            <Button x:Name="GamePathTxtReturnBtn" 
            Content="⏎" 
            Visibility="{Binding ElementName=GamePathTxt,Path=IsFocused,Converter={StaticResource CollapsedWhenFalse}}"
            Height="{StaticResource LineHeight}"/>
            <Button x:Name="GamePathBrowseBtn"
            Content="Browse"
            Click="GamePathBrowseBtn_Click"
            Height="{StaticResource LineHeight}"/>
            <TextBlock x:Name="GameDescBlock"
                Text=""
                VerticalAlignment="Center"
                Margin="10,0,0,0"/>
        </DockPanel>
        <TextBlock x:Name="GamePathErrorTxt"
           Grid.Row="1" Grid.Column="1" 
           Text=""
           Visibility="{Binding ElementName=GamePathErrorTxt,Path=Text,Converter={StaticResource CollapsedWhenEmpty}}"
           TextWrapping="Wrap">
            <TextBlock.Resources>
                <sys:String x:Key="Default">ERROR: Cannot open or access</sys:String>
            </TextBlock.Resources>
        </TextBlock>
        <!-- 'Source={x:Static Application.Current}' yields errors.
             WPF is struggling to resolve Application.Current as a static property, 
             which makes sense because Application.Current is an instance property, 
             not a static one. The error suggests that x:Static is expecting a static 
             field or property, but Application.Current is dynamic.
             There is no way to name the App in XAML either: "x:Name" doesn't work
             for 'App' specifically, for which WPF makes the excuse that App is not 
             a "visual element". So the only way out is setting the data context in
             code behind. Afterwards, automatic field selection doesn't work in the
             Visual editor, which is disconcerting, but '{Binding AgsGame …}' 
             works anyway. -->

        <Grid x:Name="ProessingGameGrid"
                    Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                    Visibility="{Binding AgsGame, Converter={StaticResource CollapsedWhenNull}}">
            <TreeView   x:Name="OverviewTV"
                        Grid.Row="0">
                <TreeView.Resources>
                    <sys:String x:Key="Discrepancies">Discrepancies:&#160;</sys:String>
                    <!-- The sequence of declarations is important here, without any good reason.
                         "<DataTemplate …> must come _first_, only then can 
                         "<HierarchicalDataTemplate …>" follow. Otherwise, you'll get a 
                         nonsensical error message that doesn't help pinpointing the core problem. -->
                    <DataTemplate 
                        DataType="{x:Type local:OverviewItem}">
                        <ListViewItem
                            HorizontalContentAlignment="Left"
                            MouseDoubleClick="ListViewItem_MouseDoubleClick">
                            <StackPanel Orientation="Horizontal" >
                                <TextBlock>
                                    <Run Text="{Binding Icon}" />
                                    <Run Text=" "/>
                                    <Run Text="{Binding Name}" />
                                </TextBlock>
                                <TextBlock>
                                     <Run Text=" "/>
                                     <Run Text="{StaticResource Discrepancies}"/>
                                     <Run Text="{Binding DiscrepancyCount, Mode=OneWay}"/>
                                </TextBlock>
                            </StackPanel>
                        </ListViewItem>
                    </DataTemplate>
                    <HierarchicalDataTemplate
                        DataType="{x:Type local:OverviewFolder}"  
                        ItemsSource="{Binding Items}">
                        <StackPanel 
                            HorizontalAlignment="Left"
                            Orientation="Horizontal">
                            <TextBlock Text="{Binding Name}" />
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="Foreground" Value="Red"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding TotalDiscrepancyCount}" Value="0">
                                                <Setter Property="FontWeight" Value="Normal"/>
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                                <Run Text=" "/>
                                <Run Text="{StaticResource Discrepancies}"/>
                                <Run Text="{Binding TotalDiscrepancyCount, Mode=OneWay}"/>
                            </TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate   
                        DataType="{x:Type local:OverviewRoom}"  
                        ItemsSource="{Binding Items}">
                        <StackPanel  
                            HorizontalAlignment="Left"
                            Orientation="Horizontal">
                            <TextBlock>
                                <Run Text="Room"/>
                                <Run Text="{Binding Number}"/>
                                <Run Text=" "/>
                                <Run Text="{Binding Name}" />
                            </TextBlock>
                            <TextBlock>
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="Foreground" Value="Red"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding TotalDiscrepancyCount}" Value="0">
                                                <Setter Property="FontWeight" Value="Normal"/>
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                                <Run Text=" "/>
                                <Run Text="{StaticResource Discrepancies}"/>
                                <Run Text="{Binding TotalDiscrepancyCount, Mode=OneWay}"/>
                            </TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                    </Style>
                </TreeView.Resources>
            </TreeView>

            <!-- At most 1 of the ListViews should be visible at all times -->
            <ListView x:Name="CharacterLV" 
                      Grid.Row="0"
                      Visibility="Collapsed">
            </ListView>
        </Grid>
    </Grid>
</Window>
